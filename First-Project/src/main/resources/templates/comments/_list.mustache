<div id="comments-list">
<!--  반복해서 commntDto의 내용 출력  -->
    <!-- -->
    {{#commentDtos}}
        <div class="card m-2" id="comments-{{id}}">
            <div class="card-header">
                {{nickname}}
                <!--수정 버튼 추카-->
                <!-- Button trigger modal -->
                <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#comment-edit-modal"
                data-bs-id="{{id}}" data-bs-nickname="{{nickname}}" data-bs-body="{{body}}" data-bs-article-id="{{articleId}}">수정</button>
                <!--삭제 버튼-->
                <button type="button" class="btn btn-sm btn-outline-danger comment-delete-btn" data-comment-id="{{id}}">삭제</button>
                <!--삭제할 데이터의 id값을 넣는다-->
            </div>
            <div class="card-body">
                {{body}}
            </div>

        </div>

    {{/commentDtos}}

</div>



<!-- Modal -->
<div class="modal fade" id="comment-edit-modal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fs-5" id="exampleModalLabel">댓글 수정</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form>
                    <!--닉네임 입력-->
                    <div class="mb-3">
                        <label class="form-label">닉네임</label>
                        <input type="text" class="form-control form-control-sm" id="edit-comment-nickname">
                    </div>
                    <!--댓글 본문 입력-->
                    <div class="mb-3">
                        <label class="form-label">댓글내용</label>
                        <textarea class="form-control form-control-sm" id="edit-comment-body" rows="3"></textarea>
                    </div>
                        <input type="hidden" id="edit-comment-id">
                        <input type="hidden" id="edit-comment-article-id">
                    <!--댓글 수정 버튼-->
                    <button type="button" class="btn btn-outline-primary" id="comment-update-btn">수정</button>

                </form>
            </div>
        </div>
    </div>
</div>


<!--모달 이벤트 처리-->
<script>
{
    //모달 요소 선택
    const commentEditModal = document.querySelector("#comment-edit-modal");
    //모달 이벤트 감지
    commentEditModal.addEventListener('show.bs.modal', function(){
        //트리거 버튼 선택
        const triggerBtn = event.relatedTarget;
        //데이터 가져오기
        const id = triggerBtn.getAttribute('data-bs-id');
        const nickname = triggerBtn.getAttribute('data-bs-nickname');
        const body = triggerBtn.getAttribute('data-bs-body');
        const articleId = triggerBtn.getAttribute('data-bs-article-id');
        console.log(`${id}, ${nickname}, ${body}, ${articleId}`); //백틱 이용

        //데이터 반영
        document.querySelector('#edit-comment-nickname').value = nickname;
        document.querySelector('#edit-comment-body').value = body;
        document.querySelector('#edit-comment-id').value = id;
        document.querySelector('#edit-comment-article-id').value = articleId;

    });
}

{
    //수정 완료 버튼
    const commentUpdateBtn = document.querySelector("#comment-update-btn");
    //클릭 이벤트 처리
    commentUpdateBtn.addEventListener("click",function(){
        const comment = {
        id : document.querySelector("#edit-comment-id").value,
        nickname : document.querySelector("#edit-comment-nickname").value,
        body : document.querySelector("#edit-comment-body").value,
        article_id : document.querySelector("#edit-comment-article-id").value
    };
        console.log(comment);

        // 수정 REST API호출 - fetch()
        const url = "/api/comments/"+comment.id;
        fetch(url, {
            method : "PATCH",
            body : JSON.stringify(comment),
            headers : {
                "Content-Type" : "application/json",
            },
        }).then(response => {
            //http : 응답 코드에 따른 메세지 출력
            const msg = (response.ok) ? "댓글 수정이 완료되었습니다" : "댓글 수정에 실패하였습니다";
            alert(msg);

            //현재 페이지를 새로 고침
            window.location.reload();
        });
    });

}
</script>

<!--댓글 삭제-->
<script>
    //삭제 버튼 선택 (querySelectorAll 사용)
    const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");

    //삭제 이벤트
    commentDeleteBtns.forEach(btn => {
        //각 버튼의 이벤트 처리를 등록
        btn.addEventListener("click",(event) => {  // () => == function()
           //이벤트 발생요소를 선택
           const commentDeleteBtn = event.srcElement; //srcElement -> target 대체 가능
           //삭제 댓글 id 가져오기
           const commentId = commentDeleteBtn.getAttribute("data-comment-id");
           //console.log(`삭제 할 Id ${commentId}번 째 댓글`) //백틱(`) 을 사용할 떄는 변수값은 +가 아닌 ${}로 호출가능
          //삭제 API 호출 및 처리
         const url = `/api/comments/${commentId}`;
            if(confirm("댓글을 삭제하시겠습니까?") === true){
                fetch(url, {
                    method : "DELETE"
                }).then(response => {
                    //댓글 삭제 실패 처리
                    if(!response.ok){
                        alert("댓글 삭제 실패!");
                        return;
                    }
                    //삭제 성공 시, 댓글을 화면에서 지움
                    const target = document.querySelector(`#comments-${commentId}`);
                    target.remove();
                    alert("댓글이 삭제 되었습니다.");
            });
            };
        });
    });
</script>